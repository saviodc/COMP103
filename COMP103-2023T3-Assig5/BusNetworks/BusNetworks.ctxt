#BlueJ class context
comment0.target=BusNetworks
comment1.params=filename
comment1.target=void\ loadNetwork(java.lang.String)
comment1.text=\ CORE\n\ Loads\ a\ network\ of\ towns\ from\ a\ file.\n\ Constructs\ a\ Map\ of\ Town\ objects\ in\ the\ busNetwork\ field\n\ Each\ town\ has\ a\ name\ and\ a\ set\ of\ neighbouring\ towns\n\ First\ line\ of\ file\ contains\ the\ names\ of\ all\ the\ towns.\n\ Remaining\ lines\ have\ pairs\ of\ names\ of\ towns\ that\ are\ connected.\n
comment10.params=question
comment10.target=Town\ askTown(java.lang.String)
comment10.text=\n\ Method\ to\ get\ a\ Town\ from\ a\ dialog\ box\ with\ a\ list\ of\ options\n
comment2.params=
comment2.target=void\ printNetwork()
comment2.text=\ \ CORE\n\ Print\ all\ the\ towns\ and\ their\ neighbours\:\n\ Each\ line\ starts\ with\ the\ name\ of\ the\ town,\ followed\ by\n\ \ the\ names\ of\ all\ its\ immediate\ neighbours,\n
comment3.params=town\ dest
comment3.target=void\ findRoute(Town,\ Town)
comment3.text=\ CORE\n\ Print\ out\ the\ towns\ on\ a\ route\ (not\ necessarily\ the\ shortest)\n\ from\ a\ starting\ town\ to\ a\ destination\ town.\n\ OK\ to\ print\ the\ towns\ on\ the\ route\ in\ reverse\ order.\n\ Use\ a\ recursive\ (post-order)\ depth\ first\ search.\n\ Use\ a\ helper\ method\ with\ a\ visited\ set.\n
comment4.params=town\ dest\ visited
comment4.target=boolean\ findRoute(Town,\ Town,\ java.util.Set)
comment4.text=\n\ Recursive\ helper\ method\ that\ checks\ if\ the\ current\ town\ is\ equal\ to\ the\ destination\ we\ want\n\ Else\ calls\ on\ the\ children\ if\ havent\ visited\ before\n
comment5.params=town
comment5.target=void\ printReachable(Town)
comment5.text=\ \ COMPLETION\n\ Print\ all\ the\ towns\ that\ are\ reachable\ through\ the\ network\ from\n\ the\ given\ town.\ The\ Towns\ should\ be\ printed\ in\ order\ of\ distance\ from\ the\ town\n\ where\ distance\ is\ the\ number\ of\ stops\ along\ the\ way.\n
comment6.params=
comment6.target=void\ printConnectedGroups()
comment6.text=\ \ COMPLETION\n\ Print\ all\ the\ connected\ sets\ of\ towns\ in\ the\ busNetwork\n\ Each\ line\ of\ the\ output\ should\ be\ the\ names\ of\ the\ towns\ in\ a\ connected\ set\n\ Works\ through\ busNetwork,\ using\ findAllConnected\ on\ each\ town\ that\ hasn't\n\ yet\ been\ printed\ out.\n
comment7.params=town\ visited
comment7.target=void\ findAllConnected(Town,\ java.util.Set)
comment7.text=\n\ Updates\ a\ visited\ set\ for\ one\ node\n\ Traverse\ the\ network\ from\ this\ node\ using\ a\n\ visited\ set\ \n
comment8.params=
comment8.target=void\ setupGUI()
comment8.text=\n\ Set\ up\ the\ GUI\ (buttons\ and\ mouse)\n
comment9.params=arguments
comment9.target=void\ main(java.lang.String[])
numComments=11
