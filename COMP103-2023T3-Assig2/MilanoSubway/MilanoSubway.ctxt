#BlueJ class context
comment0.target=MilanoSubway
comment0.text=\n\ MilanoSubway\n\ A\ program\ to\ answer\ queries\ about\ Milan\ Metro\ subway\ lines\ and\ timetables\ for\n\ \ the\ subway\ services\ on\ those\ subway\ lines.\n\n\ See\ the\ assignment\ page\ for\ a\ description\ of\ the\ program\ and\ what\ you\ have\ to\ do.\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\n\ main\ method\:\ \ load\ the\ data\ and\ set\ up\ the\ user\ interface\n
comment10.params=
comment10.target=void\ listLinesOfStation()
comment10.text=\n\ List\ all\ the\ lines\ at\ the\ set\ station\n
comment11.params=
comment11.target=void\ listStationsOnLine()
comment11.text=\n\ Lists\ all\ the\ station\ at\ the\ set\ line\n
comment12.params=
comment12.target=SubwayLine\ onSameLine()
comment12.text=\n\ Checks\ if\ the\ currentStation\ and\ the\ destination\ are\ on\ the\ same\ line\ and\ return\ what\ line\ that\ is\ for\ later\ use\ \n
comment13.params=start\ end
comment13.target=SubwayLine\ onSameLine(Station,\ Station)
comment13.text=\n\ Checks\ the\ same\ onSameLine,\ but\ independant\ of\ the\ variables\n\ This\ is\ for\ challenge\ and\ is\ only\ to\ try\ see\ if\ i\ can\ solve\ routing\ problem\ by\ using\ this\ method\ to\ aid\ the\ search\n
comment14.params=
comment14.target=java.util.Map\ findNextServices()
comment14.text=\n\ Finds\ when\ the\ next\ service\ is\ at\ after\ the\ set\ time\ from\ the\ set\ destination,\ returns\ what\ line\ and\ time\ for\ potential\ further\ use\n
comment15.params=
comment15.target=void\ findTrip()
comment15.text=\n\ Finds\ the\ next\ trip\ if\ there\ is\ one\ between\ the\ current\ and\ destination,\ using\ the\ onSameLine()\ method\ to\ do\ some\ of\ the\ work\ as\ would\ be\ uneccessary\ code\ repetion\n
comment16.params=
comment16.target=void\ loadAllExchangeStations()
comment16.text=\n\ Loading\ a\ map\ of\ all\ the\ exchange\ stations\ where\ you\ can\ hop\ onto\ a\ different\ line\n
comment17.params=
comment17.target=void\ findPath()
comment17.text=\n\ Find\ path\ by\ running\ through\ the\ all\ the\ exchange\ paths\ and\ finding\ a\ way\ to\ the\ destination\ through\ alternate\ stations\n\ This\ works\ by\ finding\ a\ common\ exchange\ point\ to\ travel\ through\ and\ change\ lines\ \n\ This\ displays\ all\ the\ possible\ routes\ that\ intersect\ with\ these\ exchange\ points\ frm\ the\ start\ and\ end\ point\n
comment18.params=time
comment18.target=void\ setTime(java.lang.String)
comment18.text=\n\ Set\ the\ startTime.\n\ If\ user\ enters\ an\ invalid\ time,\ it\ reports\ an\ error\n
comment19.params=
comment19.target=void\ setCurrentStation()
comment19.text=\n\ Ask\ the\ user\ for\ a\ station\ name\ and\ assign\ it\ to\ the\ currentStationName\ field\n\ Must\ pass\ a\ collection\ of\ the\ names\ of\ the\ stations\ to\ getOptionFromList\n
comment2.params=
comment2.target=void\ loadData()
comment2.text=\n\ Load\ data\ files\n
comment20.params=
comment20.target=void\ setDestinationStation()
comment20.text=\n\ Ask\ the\ user\ for\ a\ destination\ station\ name\ and\ assign\ it\ to\ the\ destinationName\ field\n\ Must\ pass\ a\ collection\ of\ the\ names\ of\ the\ stations\ to\ getOptionFromList\n
comment21.params=
comment21.target=void\ setCurrentLine()
comment21.text=\n\ Ask\ the\ user\ for\ a\ subway\ line\ and\ assign\ it\ to\ the\ currentLineName\ field\n\ Must\ pass\ a\ collection\ of\ the\ names\ of\ the\ lines\ to\ getOptionFromList\n
comment22.params=question\ options
comment22.target=java.lang.String\ getOptionFromList(java.lang.String,\ java.util.Collection)
comment22.text=\n\ Method\ to\ get\ a\ string\ from\ a\ dialog\ box\ with\ a\ list\ of\ options\n
comment3.params=
comment3.target=void\ setupGUI()
comment3.text=\n\ User\ interface\ has\ buttons\ for\ the\ queries\ and\ text\ fields\ to\ enter\ stations\ and\ subway\ line\n\ You\ will\ need\ to\ implement\ the\ methods\ here,\ or\ comment\ out\ the\ button.\n
comment4.params=
comment4.target=void\ loadStationData()
comment4.text=\n\ Gets\ all\ lines\ in\ appropriate\ file\ and\ adds\ to\ map\ of\ stations,\ mapping\ names\ to\ their\ station\ representation\n\ \n
comment5.params=
comment5.target=void\ loadSubwayLineData()
comment5.text=\n\ Get\ all\ the\ subway\ lines\ from\ the\ name,\ then\ fills\ appropriate\ values\ for\ a\ station\ from\ its\ files\n
comment6.params=
comment6.target=void\ loadLineServicesData()
comment6.text=\n\ Reads\ all\ the\ times\ of\ every\ line\ into\ a\ new\ LineService\ and\ adds\ it\ to\ appropriate\ SubwayLine\n
comment7.params=
comment7.target=void\ listAllStations()
comment7.text=\n\ Lists\ all\ the\ stations\ of\ the\ train\ system\n
comment8.params=
comment8.target=void\ listStationsByName()
comment8.text=\n\ Prints\ a\ sorted\ list\ of\ the\ names\n
comment9.params=
comment9.target=void\ listAllSubwayLines()
comment9.text=\n\ Lists\ all\ the\ subway\ lines\ of\ the\ train\ system\n
numComments=23
