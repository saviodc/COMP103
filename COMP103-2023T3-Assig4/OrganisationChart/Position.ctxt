#BlueJ class context
comment0.target=Position
comment0.text=\n\ Represents\ a\ position\ in\ an\ organisation\n\ Normal\ positions\ have\ a\ role\ (and\ could\ have\ further\ information)\n\ A\ manager\ is\ a\ position\ that\ has\ a\ non\ empty\ team\ consisting\ of\n\ \ \ a\ set\ of\ positions.\n\ \ \ (If\ a\ position\ has\ an\ empty\ team,\ then\ it\ is\ not\ a\ manager.)\n\ All\ positions\ (other\ than\ the\ CEO)\ have\ a\ manager,\ the\ position\n\ \ \ that\ this\ position\ reports\ to.\n\n\ A\ position\ is\ drawn\ as\ a\ rectangle,\ labeled\ with\ the\ role\n\ Every\ Position\ (except\ the\ CEO)\ will\ be\ drawn\ with\ a\ link\ to\ \n\ \ \ their\ manager.\n\ Every\ Position\ is\ drawn\ one\ layer\ down\ from\ its\ manager,\ at\ a\ horizontal\n\ \ location\ specified\ by\ the\ position's\ offset,\ which\ specifies\ how\ far\n\ \ to\ the\ right\ (or\ left)\ of\ the\ location\ of\ the\ manager.\n\ \ \ This\ means\ that\ if\ the\ manager\ is\ moved\ around\ on\ the\ screen,\ \n\ \ \ the\ team\ members\ (and\ their\ team\ members,\ and\ ....)\ will\n\ \ \ automatically\ move\ with\ them.\n
comment1.params=
comment1.target=Position()
comment1.text=\n\ Construct\ a\ new\ vacant\ Position\ object\ with\ unknown\ role\n
comment10.params=
comment10.target=java.util.Set\ getTeam()
comment10.text=\n\ Returns\ the\ set\ of\ positions\ in\ the\ team,\n
comment11.params=
comment11.target=boolean\ isManager()
comment11.text=\n\ Returns\ true\ iff\ this\ position\ is\ managing\ any\ other\ positions\n
comment12.params=
comment12.target=double\ getOffset()
comment12.text=\n\ Returns\ the\ offset\ \n
comment13.params=x
comment13.target=void\ moveOffset(double)
comment13.text=\n\ Move\ the\ value\ offset\ so\ that\ the\ Position\ will\ be\ drawn\ at\ location\ x\ \n\ Offset\ specifies\ where\ to\ draw\ the\ position,\ relative\ to\ their\ manager.\n\ Offset\ is\ the\ distance\ to\ the\ right\ (or\ left,\ if\ negative)\ of\ the\ manager's\ location.\n
comment14.params=off
comment14.target=void\ setOffset(double)
comment14.text=\n\ Set\ the\ offset\ value\ (horizontal\ location\ of\ this\ position\ relative\ to\ manager)\n\ Only\ needed\ for\ constructing\ test\ hierarchy\ or\ loading\ from\ a\ file.\n
comment15.params=
comment15.target=double\ getTop()
comment15.text=\n\ Return\ the\ top\ of\ this\ position\ box\ (internal\ use\ only)\n\ Calculated\ \n
comment16.params=
comment16.target=double\ getX()
comment16.text=\n\ Horizontal\ center\ of\ this\ position\ box\ (internal\ use\ only)\n\ Recursive\ method,\ to\ compute\ center\ from\ the\ offset\ and\ the\ center\ of\ the\ manager.\n
comment17.params=x\ y
comment17.target=boolean\ on(double,\ double)
comment17.text=\n\ Returns\ true\ iff\ the\ point\ (x,y)\ is\ on\ top\ of\ where\n\ \ this\ position\ is\ currently\ drawn.\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\n\ Returns\ a\ string\ containing\ the\ details\ of\ a\ position.\n\ if\ the\ role\ or\ initials\ are\ null,\ then\ will\ be\ given\ as\ ""\n
comment19.params=
comment19.target=java.lang.String\ toStringFull()
comment19.text=\n\ Returns\ a\ string\ containing\ the\ details\ of\ a\ position,\ plus\n\ offset\ and\ number\ of\ members\ of\ their\ team.\n\ initials\ and\ role\ may\ be\ "NULL"\n\ May\ be\ useful\ for\ saving\ to\ files\n
comment2.params=role
comment2.target=Position(java.lang.String)
comment2.text=\n\ Construct\ a\ new\ Position\ object\ with\ a\ role.\n
comment20.params=
comment20.target=void\ draw()
comment20.text=\n\ Draw\ a\ box\ representing\ the\ Position,\n\ Also\ draws\ the\ connection\ to\ its\ manager\ (if\ there\ is\ a\ manager)\n
comment21.params=
comment21.target=void\ drawHighlighted()
comment21.text=\n\ Draw\ the\ position,\ but\ highlight\ it\ as\ selected\n
comment22.params=highlighted\ tempHighlighted
comment22.target=void\ draw(boolean,\ boolean)
comment22.text=\n\ Draw\ the\ box\ with\ highlights\n\ Three\ possible\ highlights\:\n\ \ selected\ (bright\ green)\n\ \ temporary\ for\ mouse\ pressed\ on\ position\n\ \ temporary\ employee\ highlight\ for\ mouse\ pressed\ on\ employee\n
comment3.params=role\ offset
comment3.target=Position(java.lang.String,\ double)
comment3.text=\n\ Construct\ a\ new\ Position\ object\ with\ the\ given\ role\ and\ offset\n\ Useful\ for\ loading\ from\ file\ \n
comment4.params=newMemb
comment4.target=void\ addToTeam(Position)
comment4.text=\n\ Add\ a\ new\ member\ to\ the\ team\ managed\ by\ this\ position,\ and\n\ ensure\ that\ the\ new\ team\ member\ has\ this\ position\ as\ their\ manager\n
comment5.params=teamMemb
comment5.target=void\ removeFromTeam(Position)
comment5.text=\n\ Remove\ a\ member\ of\ the\ team\ managed\ by\ this\ position,\ and\n\ ensure\ that\ the\ team\ member\ no\ longer\ has\ this\ position\ as\ their\ manager\n
comment6.params=
comment6.target=Position\ getManager()
comment6.text=\n\ Returns\ the\ manager\ of\ this\ Position\n
comment7.params=
comment7.target=java.lang.String\ getRole()
comment7.text=\n\ Returns\ the\ role\ of\ this\ Position\n
comment8.params=r
comment8.target=void\ setRole(java.lang.String)
comment8.text=\n\ Sets\ the\ role\ of\ this\ Position\n
comment9.params=
comment9.target=void\ clearRole()
comment9.text=Clear\ the\ role\ of\ the\ position
numComments=23
