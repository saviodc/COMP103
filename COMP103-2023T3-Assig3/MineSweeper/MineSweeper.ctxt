#BlueJ class context
comment0.target=MineSweeper
comment0.text=\n\ \ Simple\ 'Minesweeper'\ program.\n\ \ There\ is\ a\ grid\ of\ squares,\ some\ of\ which\ contain\ a\ mine.\n\ \ \n\ \ The\ user\ can\ click\ on\ a\ square\ to\ either\ expose\ it\ or\ to\n\ \ mark/unmark\ it.\n\ \ \n\ \ If\ the\ user\ exposes\ a\ square\ with\ a\ mine,\ they\ lose.\n\ \ Otherwise,\ it\ is\ uncovered,\ and\ shows\ a\ number\ which\ represents\ the\n\ \ number\ of\ mines\ in\ the\ eight\ squares\ surrounding\ that\ one.\n\ \ If\ there\ are\ no\ mines\ adjacent\ to\ it,\ then\ all\ the\ unexposed\ squares\n\ \ immediately\ adjacent\ to\ it\ are\ exposed\ (and\ so\ on)\n\n\ \ If\ the\ user\ marks\ a\ square,\ then\ they\ cannot\ expose\ the\ square,\n\ \ (unless\ they\ unmark\ it\ first)\n\ \ When\ all\ the\ squares\ without\ mines\ are\ exposed,\ the\ user\ has\ won.\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=Set\ up\ the\ GUI\:\ buttons\ and\ mouse\ to\ play\ the\ game
comment10.params=
comment10.target=void\ makeGrid()
comment10.text=\n\ Construct\ and\ draw\ a\ grid\ with\ random\ mines.\n\ Compute\ the\ number\ of\ adjacent\ mines\ in\ each\ Square\n
comment11.params=
comment11.target=void\ drawWin()
comment11.text=\n\ Draw\ a\ message\ telling\ the\ player\ they\ have\ won\n
comment12.params=
comment12.target=void\ drawLose()
comment12.text=\n\ Draw\ a\ message\ telling\ the\ player\ they\ have\ lost\n\ and\ expose\ all\ the\ squares\ and\ redraw\ them\n
comment13.params=arguments
comment13.target=void\ main(java.lang.String[])
comment13.text=\ \n\ Construct\ a\ new\ MineSweeper\ object\n\ and\ set\ up\ the\ GUI\n
comment2.params=action\ x\ y
comment2.target=void\ doMouse(java.lang.String,\ double,\ double)
comment2.text=Respond\ to\ mouse\ events
comment3.params=
comment3.target=int[][]\ readState()
comment3.text=\n\ Challenge\ method,\ reads\ the\ state\ of\ the\ game\ to\ the\ grid\ field\n
comment4.params=currentState
comment4.target=void\ suggest(int[][])
comment4.text=\n\ Challenge\ helper\ method\ that\ suggests\ moves\n\ This\ suggests\ player\ moves\ based\ on\ common\ patterns\ in\ the\ game\ \n\ The\ use\ of\ '+1'\ can\ bee\ seen\ throughout\ showing\ a\ shift\ from\ index\ to\ position\ \n
comment5.params=row\ col
comment5.target=void\ mark(int,\ int)
comment5.text=\n\ Mark\ (or\ unmark)\ the\ square.\n
comment6.params=row\ col
comment6.target=void\ tryExpose(int,\ int)
comment6.text=\n\ Respond\ to\ the\ player\ clicking\ on\ a\ square\ to\ expose\ it\n
comment7.params=row\ col
comment7.target=void\ exposeSquareAt(int,\ int)
comment7.text=\n\ \ Ensures\ that\ the\ square\ at\ row\ and\ col\ is\ exposed.\n
comment8.params=
comment8.target=boolean\ hasWon()
comment8.text=\n\ Returns\ true\ if\ the\ player\ has\ won\:\n
comment9.params=v
comment9.target=void\ setMarking(boolean)
comment9.text=\ \n\ Respond\ to\ the\ Mark\ and\ Expose\ buttons\n
numComments=14
