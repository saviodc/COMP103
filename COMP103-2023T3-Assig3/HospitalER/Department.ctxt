#BlueJ class context
comment0.target=Department
comment0.text=\n\ A\ treatment\ Department\ (Surgery,\ X-ray\ room,\ \ ER,\ Ultrasound,\ etc)\n\ Each\ department\ will\ need\n\ -\ A\ name,\n\ -\ A\ maximum\ number\ of\ patients\ that\ can\ be\ treated\ at\ the\ same\ time\n\ -\ A\ Set\ of\ Patients\ that\ are\ currently\ being\ treated\n\ -\ A\ Queue\ of\ Patients\ waiting\ to\ be\ treated.\n\ \ \ \ (ordinary\ queue,\ or\ priority\ queue,\ depending\ on\ argument\ to\ constructor)\n
comment1.params=name\ maxPatients\ usePriQueue\ c
comment1.target=Department(java.lang.String,\ int,\ boolean,\ java.awt.Color)
comment1.text=\n\ Construct\ a\ new\ Department\ object\n\ Initialise\ the\ waiting\ queue\ and\ the\ current\ Set.\n
comment10.params=
comment10.target=java.lang.String\ getDepartmentName()
comment10.text=\n\ Gets\ the\ name\ of\ the\ department\n
comment11.params=
comment11.target=java.util.Set\ getTreatmentRoom()
comment11.text=\n\ Gets\ all\ the\ patients\ in\ the\ treatment\ room\n
comment12.params=patient
comment12.target=Patient\ remove(Patient)
comment12.text=\n\ removes\ a\ patient\ from\ the\ department\n
comment13.params=
comment13.target=boolean\ hasSpace()
comment13.text=\n\ Returns\ whether\ or\ not\ there\ is\ space\ for\ another\ patient\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment15.params=pat
comment15.target=Patient\ getWaitingPatient(Patient)
comment15.text=\n\ gets\ a\ patient\ from\ the\ waiting\ room\n
comment16.params=pat
comment16.target=Patient\ getPatient(Patient)
comment16.text=\n\ gets\ a\ patient\ from\ treatment\ room\ \n
comment17.params=other\ p
comment17.target=void\ moveFrom(Department,\ Patient)
comment17.text=\n\ Moves\ a\ patient\ between\ departments\n
comment18.params=
comment18.target=boolean\ isTreating()
comment18.text=\n\ Returns\ if\ department\ is\ currently\ treating\ any\ patients\n
comment19.params=patient
comment19.target=void\ add(Patient)
comment19.text=\n\ Add\ a\ patient\ to\ a\ new\ department\n
comment2.params=
comment2.target=java.awt.Color\ getDepartmentColor()
comment2.text=\n\ Challenge\ Method\n\ Gets\ assigned\ color\n
comment20.params=
comment20.target=void\ move()
comment20.text=\n\ shifts\ from\ waiting\ room\ to\ treatement\n
comment21.params=y
comment21.target=void\ redraw(double)
comment21.text=\n\ Draw\ the\ department\:\ the\ patients\ being\ treated\ and\ the\ patients\ waiting\n\ You\ may\ need\ to\ change\ the\ names\ if\ your\ fields\ had\ different\ names\n
comment3.params=
comment3.target=void\ increaseDepartmentWaitTotal()
comment3.text=\n\ Challenge\ Method\n\ Increases\ the\ total\ time\ waited\ in\ a\ department\n
comment4.params=
comment4.target=void\ increasePatientSeen()
comment4.text=\n\ Challenge\ Method\n\ Increase\ the\ number\ of\ patients\ treated\ count\ \n
comment5.params=
comment5.target=int\ getTotalWait()
comment5.text=\n\ Challenge\ method\n\ Get\ the\ total\ wait\ time\n
comment6.params=
comment6.target=int\ getTotalPatientsSeen()
comment6.text=\n\ Get\ the\ total\ patients\ seen\n
comment7.params=usePriorityQueues
comment7.target=void\ clear(java.lang.Boolean)
comment7.text=\n\ Clears\ both\ the\ rooms\ of\ the\ department\n
comment8.params=
comment8.target=int\ getCapacity()
comment8.text=\n\ Returns\ how\ many\ patients\ can\ be\ treated\ at\ a\ single\ instance\n
comment9.params=
comment9.target=java.util.Queue\ getWaitingRoom()
comment9.text=\n\ Gets\ all\ patients\ in\ the\ waiting\ room\n
numComments=22
